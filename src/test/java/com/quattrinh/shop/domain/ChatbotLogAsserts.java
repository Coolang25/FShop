package com.quattrinh.shop.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChatbotLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatbotLogAllPropertiesEquals(ChatbotLog expected, ChatbotLog actual) {
        assertChatbotLogAutoGeneratedPropertiesEquals(expected, actual);
        assertChatbotLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatbotLogAllUpdatablePropertiesEquals(ChatbotLog expected, ChatbotLog actual) {
        assertChatbotLogUpdatableFieldsEquals(expected, actual);
        assertChatbotLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatbotLogAutoGeneratedPropertiesEquals(ChatbotLog expected, ChatbotLog actual) {
        assertThat(expected)
            .as("Verify ChatbotLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatbotLogUpdatableFieldsEquals(ChatbotLog expected, ChatbotLog actual) {
        assertThat(expected)
            .as("Verify ChatbotLog relevant properties")
            .satisfies(e -> assertThat(e.getQuestion()).as("check question").isEqualTo(actual.getQuestion()))
            .satisfies(e -> assertThat(e.getAnswer()).as("check answer").isEqualTo(actual.getAnswer()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatbotLogUpdatableRelationshipsEquals(ChatbotLog expected, ChatbotLog actual) {
        // empty method
    }
}
