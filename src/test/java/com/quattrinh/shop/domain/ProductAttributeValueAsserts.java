package com.quattrinh.shop.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductAttributeValueAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductAttributeValueAllPropertiesEquals(ProductAttributeValue expected, ProductAttributeValue actual) {
        assertProductAttributeValueAutoGeneratedPropertiesEquals(expected, actual);
        assertProductAttributeValueAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductAttributeValueAllUpdatablePropertiesEquals(
        ProductAttributeValue expected,
        ProductAttributeValue actual
    ) {
        assertProductAttributeValueUpdatableFieldsEquals(expected, actual);
        assertProductAttributeValueUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductAttributeValueAutoGeneratedPropertiesEquals(
        ProductAttributeValue expected,
        ProductAttributeValue actual
    ) {
        assertThat(expected)
            .as("Verify ProductAttributeValue auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductAttributeValueUpdatableFieldsEquals(ProductAttributeValue expected, ProductAttributeValue actual) {
        assertThat(expected)
            .as("Verify ProductAttributeValue relevant properties")
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductAttributeValueUpdatableRelationshipsEquals(
        ProductAttributeValue expected,
        ProductAttributeValue actual
    ) {
        assertThat(expected)
            .as("Verify ProductAttributeValue relationships")
            .satisfies(e -> assertThat(e.getAttribute()).as("check attribute").isEqualTo(actual.getAttribute()));
    }
}
